#!/usr/bin/env python3
"""
heartbeat.py
-------------
Este script define una funci√≥n para que la aplicaci√≥n principal avise
que el sistema est√° recibiendo datos (‚Äúlatido‚Äù).

üí° ¬øQu√© es un latido?
Un archivo en /tmp (HEARTBEAT_PATH) cuya fecha de modificaci√≥n
se actualiza cada vez que la app recibe o procesa informaci√≥n v√°lida.

El LED de estado (led_rgb_status.py) revisa este archivo para saber
si el sistema est√° activo:
- Si el archivo se actualiza seguido ‚Üí el LED sabe que ‚Äúhay vida‚Äù.
- Si pasan m√°s de HEARTBEAT_TTL segundos sin actualizarlo ‚Üí se asume que no hay datos.
"""

import os

# Archivo que usar√° el LED para saber si hay actividad
HEARTBEAT_PATH = "/tmp/mgv_ae_heartbeat"

def send_heartbeat():
    """
    Actualiza la fecha/hora de modificaci√≥n del archivo de latido.

    üìå C√≥mo usar:
    Llamar a esta funci√≥n cada vez que la app reciba datos de los sem√°foros.
    Ejemplo:
        from heartbeat import send_heartbeat
        send_heartbeat()
    """
    try:
        # Abrir o crear el archivo y actualizar su fecha de modificaci√≥n
        with open(HEARTBEAT_PATH, "a"):
            os.utime(HEARTBEAT_PATH, times=None)
    except Exception as e:
        print(f"Error al enviar latido: {e}")
